// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/hc100/nobolist/backend/ent/schema"
	"github.com/hc100/nobolist/backend/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[0].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescEmailAuthenticationStatus is the schema descriptor for email_authentication_status field.
	userDescEmailAuthenticationStatus := userFields[4].Descriptor()
	// user.DefaultEmailAuthenticationStatus holds the default value on creation for the email_authentication_status field.
	user.DefaultEmailAuthenticationStatus = userDescEmailAuthenticationStatus.Default.(bool)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[5].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[6].Descriptor()
	// user.DefaultPassword holds the default value on creation for the password field.
	user.DefaultPassword = userDescPassword.Default.(string)
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[7].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(int)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[8].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[9].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
}
